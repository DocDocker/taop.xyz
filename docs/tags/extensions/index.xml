<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Extensions on The Art of PostgreSQL</title>
    <link>https://theartofpostgresql.com/tags/extensions/</link>
    <description>Recent content in Extensions on The Art of PostgreSQL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Aug 2018 12:11:33 +0200</lastBuildDate>
    
	<atom:link href="https://theartofpostgresql.com/tags/extensions/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Geolocation with PostgreSQL</title>
      <link>https://theartofpostgresql.com/blog/2018-08-geolocation-ip4r/</link>
      <pubDate>Fri, 24 Aug 2018 12:11:33 +0200</pubDate>
      
      <guid>https://theartofpostgresql.com/blog/2018-08-geolocation-ip4r/</guid>
      <description>&lt;p&gt;We have loaded Open Street Map points of interests in the article &lt;a href=&#34;https://theartofpostgresql.com/blog/2013/08/the-most-popular-pub-names/&#34;&gt;The Most
Popular Pub Names&lt;/a&gt; â€” which
compares PostgreSQL with MongoDB for simple geographical queries, and is
part of our &lt;a href=&#34;https://theartofpostgresql.com/tags/extensions/&#34;&gt;PostgreSQL Extensions&lt;/a&gt; article series. In
today&amp;rsquo;s article, look at how to geolocalize an IP address and locate the
nearest pub, all within a single SQL query!&lt;/p&gt;

&lt;p&gt;For that, we are going to use the awesome
&lt;a href=&#34;https://github.com/RhodiumToad/ip4r&#34;&gt;ip4r&lt;/a&gt; extension from
&lt;a href=&#34;http://blog.rhodiumtoad.org.uk/&#34;&gt;RhodiumToad&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>